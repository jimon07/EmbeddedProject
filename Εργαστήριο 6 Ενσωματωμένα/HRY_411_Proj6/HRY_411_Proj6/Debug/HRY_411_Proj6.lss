
HRY_411_Proj6.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000006ca  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000012  00800060  000006ca  0000073e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000750  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000780  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000b0  00000000  00000000  000007bc  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000952  00000000  00000000  0000086c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000679  00000000  00000000  000011be  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000670  00000000  00000000  00001837  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000278  00000000  00000000  00001ea8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000457  00000000  00000000  00002120  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000041e  00000000  00000000  00002577  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000a0  00000000  00000000  00002995  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 a2 01 	jmp	0x344	; 0x344 <__vector_6>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 c6 01 	jmp	0x38c	; 0x38c <__vector_11>
  30:	0c 94 eb 01 	jmp	0x3d6	; 0x3d6 <__vector_12>
  34:	0c 94 10 02 	jmp	0x420	; 0x420 <__vector_13>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ea ec       	ldi	r30, 0xCA	; 202
  68:	f6 e0       	ldi	r31, 0x06	; 6
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a2 37       	cpi	r26, 0x72	; 114
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 60 03 	call	0x6c0	; 0x6c0 <main>
  7a:	0c 94 63 03 	jmp	0x6c6	; 0x6c6 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <CTC_Timer_Interrupt>:
	UTXC_Interrupt();
}

void initWDT(){
	// Initialize Watchdog Timer
	WDTCR = (1<<WDE)|(1<<WDP2);//|(1<<WDP1);//|(1<<WDP0);
  82:	e0 91 64 00 	lds	r30, 0x0064	; 0x800064 <RingCounterAddress>
  86:	f0 91 65 00 	lds	r31, 0x0065	; 0x800065 <RingCounterAddress+0x1>
  8a:	80 81       	ld	r24, Z
  8c:	81 11       	cpse	r24, r1
  8e:	08 c0       	rjmp	.+16     	; 0xa0 <CTC_Timer_Interrupt+0x1e>
  90:	81 e0       	ldi	r24, 0x01	; 1
  92:	80 83       	st	Z, r24
  94:	80 e8       	ldi	r24, 0x80	; 128
  96:	90 e0       	ldi	r25, 0x00	; 0
  98:	90 93 71 00 	sts	0x0071, r25	; 0x800071 <display_address+0x1>
  9c:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <display_address>
  a0:	8f ef       	ldi	r24, 0xFF	; 255
  a2:	8b bb       	out	0x1b, r24	; 27
  a4:	e0 91 64 00 	lds	r30, 0x0064	; 0x800064 <RingCounterAddress>
  a8:	f0 91 65 00 	lds	r31, 0x0065	; 0x800065 <RingCounterAddress+0x1>
  ac:	80 81       	ld	r24, Z
  ae:	85 bb       	out	0x15, r24	; 21
  b0:	e0 91 64 00 	lds	r30, 0x0064	; 0x800064 <RingCounterAddress>
  b4:	f0 91 65 00 	lds	r31, 0x0065	; 0x800065 <RingCounterAddress+0x1>
  b8:	80 81       	ld	r24, Z
  ba:	88 0f       	add	r24, r24
  bc:	80 83       	st	Z, r24
  be:	e0 91 70 00 	lds	r30, 0x0070	; 0x800070 <display_address>
  c2:	f0 91 71 00 	lds	r31, 0x0071	; 0x800071 <display_address+0x1>
  c6:	80 81       	ld	r24, Z
  c8:	e0 91 6a 00 	lds	r30, 0x006A	; 0x80006a <DecAddress>
  cc:	f0 91 6b 00 	lds	r31, 0x006B	; 0x80006b <DecAddress+0x1>
  d0:	e8 0f       	add	r30, r24
  d2:	f1 1d       	adc	r31, r1
  d4:	80 81       	ld	r24, Z
  d6:	8b bb       	out	0x1b, r24	; 27
  d8:	80 91 70 00 	lds	r24, 0x0070	; 0x800070 <display_address>
  dc:	90 91 71 00 	lds	r25, 0x0071	; 0x800071 <display_address+0x1>
  e0:	01 96       	adiw	r24, 0x01	; 1
  e2:	90 93 71 00 	sts	0x0071, r25	; 0x800071 <display_address+0x1>
  e6:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <display_address>
  ea:	08 95       	ret

000000ec <clearseg>:
  ec:	80 e8       	ldi	r24, 0x80	; 128
  ee:	90 e0       	ldi	r25, 0x00	; 0
  f0:	90 93 71 00 	sts	0x0071, r25	; 0x800071 <display_address+0x1>
  f4:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <display_address>
  f8:	28 e0       	ldi	r18, 0x08	; 8
  fa:	3a e0       	ldi	r19, 0x0A	; 10
  fc:	e0 91 70 00 	lds	r30, 0x0070	; 0x800070 <display_address>
 100:	f0 91 71 00 	lds	r31, 0x0071	; 0x800071 <display_address+0x1>
 104:	30 83       	st	Z, r19
 106:	80 91 70 00 	lds	r24, 0x0070	; 0x800070 <display_address>
 10a:	90 91 71 00 	lds	r25, 0x0071	; 0x800071 <display_address+0x1>
 10e:	01 96       	adiw	r24, 0x01	; 1
 110:	90 93 71 00 	sts	0x0071, r25	; 0x800071 <display_address+0x1>
 114:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <display_address>
 118:	21 50       	subi	r18, 0x01	; 1
 11a:	81 f7       	brne	.-32     	; 0xfc <clearseg+0x10>
 11c:	80 e8       	ldi	r24, 0x80	; 128
 11e:	90 e0       	ldi	r25, 0x00	; 0
 120:	90 93 71 00 	sts	0x0071, r25	; 0x800071 <display_address+0x1>
 124:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <display_address>
 128:	08 95       	ret

0000012a <NumberInstr>:
 12a:	0e 94 76 00 	call	0xec	; 0xec <clearseg>
 12e:	eb ea       	ldi	r30, 0xAB	; 171
 130:	f0 e0       	ldi	r31, 0x00	; 0
 132:	f0 93 6d 00 	sts	0x006D, r31	; 0x80006d <InstrAddress+0x1>
 136:	e0 93 6c 00 	sts	0x006C, r30	; 0x80006c <InstrAddress>
 13a:	80 81       	ld	r24, Z
 13c:	8d 30       	cpi	r24, 0x0D	; 13
 13e:	61 f0       	breq	.+24     	; 0x158 <NumberInstr+0x2e>
 140:	aa ea       	ldi	r26, 0xAA	; 170
 142:	b0 e0       	ldi	r27, 0x00	; 0
 144:	fd 01       	movw	r30, r26
 146:	b0 93 6d 00 	sts	0x006D, r27	; 0x80006d <InstrAddress+0x1>
 14a:	a0 93 6c 00 	sts	0x006C, r26	; 0x80006c <InstrAddress>
 14e:	8c 91       	ld	r24, X
 150:	11 97       	sbiw	r26, 0x01	; 1
 152:	8d 30       	cpi	r24, 0x0D	; 13
 154:	b9 f7       	brne	.-18     	; 0x144 <NumberInstr+0x1a>
 156:	02 c0       	rjmp	.+4      	; 0x15c <NumberInstr+0x32>
 158:	eb ea       	ldi	r30, 0xAB	; 171
 15a:	f0 e0       	ldi	r31, 0x00	; 0
 15c:	31 97       	sbiw	r30, 0x01	; 1
 15e:	f0 93 6d 00 	sts	0x006D, r31	; 0x80006d <InstrAddress+0x1>
 162:	e0 93 6c 00 	sts	0x006C, r30	; 0x80006c <InstrAddress>
 166:	80 81       	ld	r24, Z
 168:	8e 34       	cpi	r24, 0x4E	; 78
 16a:	d9 f0       	breq	.+54     	; 0x1a2 <NumberInstr+0x78>
 16c:	a0 91 70 00 	lds	r26, 0x0070	; 0x800070 <display_address>
 170:	b0 91 71 00 	lds	r27, 0x0071	; 0x800071 <display_address+0x1>
 174:	80 81       	ld	r24, Z
 176:	8c 93       	st	X, r24
 178:	80 91 70 00 	lds	r24, 0x0070	; 0x800070 <display_address>
 17c:	90 91 71 00 	lds	r25, 0x0071	; 0x800071 <display_address+0x1>
 180:	01 96       	adiw	r24, 0x01	; 1
 182:	90 93 71 00 	sts	0x0071, r25	; 0x800071 <display_address+0x1>
 186:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <display_address>
 18a:	e0 91 6c 00 	lds	r30, 0x006C	; 0x80006c <InstrAddress>
 18e:	f0 91 6d 00 	lds	r31, 0x006D	; 0x80006d <InstrAddress+0x1>
 192:	31 97       	sbiw	r30, 0x01	; 1
 194:	f0 93 6d 00 	sts	0x006D, r31	; 0x80006d <InstrAddress+0x1>
 198:	e0 93 6c 00 	sts	0x006C, r30	; 0x80006c <InstrAddress>
 19c:	80 81       	ld	r24, Z
 19e:	8e 34       	cpi	r24, 0x4E	; 78
 1a0:	29 f7       	brne	.-54     	; 0x16c <NumberInstr+0x42>
 1a2:	80 ea       	ldi	r24, 0xA0	; 160
 1a4:	90 e0       	ldi	r25, 0x00	; 0
 1a6:	90 93 6d 00 	sts	0x006D, r25	; 0x80006d <InstrAddress+0x1>
 1aa:	80 93 6c 00 	sts	0x006C, r24	; 0x80006c <InstrAddress>
 1ae:	80 e8       	ldi	r24, 0x80	; 128
 1b0:	90 e0       	ldi	r25, 0x00	; 0
 1b2:	90 93 71 00 	sts	0x0071, r25	; 0x800071 <display_address+0x1>
 1b6:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <display_address>
 1ba:	88 ef       	ldi	r24, 0xF8	; 248
 1bc:	8a b9       	out	0x0a, r24	; 10
 1be:	08 95       	ret

000001c0 <ClearInstr>:
 1c0:	0e 94 76 00 	call	0xec	; 0xec <clearseg>
 1c4:	88 ef       	ldi	r24, 0xF8	; 248
 1c6:	8a b9       	out	0x0a, r24	; 10
 1c8:	08 95       	ret

000001ca <RXC_Interrupt>:
 1ca:	0f 93       	push	r16
 1cc:	e0 91 6c 00 	lds	r30, 0x006C	; 0x80006c <InstrAddress>
 1d0:	f0 91 6d 00 	lds	r31, 0x006D	; 0x80006d <InstrAddress+0x1>
 1d4:	8c b1       	in	r24, 0x0c	; 12
 1d6:	80 83       	st	Z, r24
 1d8:	e0 91 6c 00 	lds	r30, 0x006C	; 0x80006c <InstrAddress>
 1dc:	f0 91 6d 00 	lds	r31, 0x006D	; 0x80006d <InstrAddress+0x1>
 1e0:	8c b1       	in	r24, 0x0c	; 12
 1e2:	80 83       	st	Z, r24
 1e4:	e0 91 6c 00 	lds	r30, 0x006C	; 0x80006c <InstrAddress>
 1e8:	f0 91 6d 00 	lds	r31, 0x006D	; 0x80006d <InstrAddress+0x1>
 1ec:	00 83       	st	Z, r16
 1ee:	e0 91 6c 00 	lds	r30, 0x006C	; 0x80006c <InstrAddress>
 1f2:	f0 91 6d 00 	lds	r31, 0x006D	; 0x80006d <InstrAddress+0x1>
 1f6:	80 81       	ld	r24, Z
 1f8:	8a 30       	cpi	r24, 0x0A	; 10
 1fa:	b9 f4       	brne	.+46     	; 0x22a <RXC_Interrupt+0x60>
 1fc:	e0 ea       	ldi	r30, 0xA0	; 160
 1fe:	f0 e0       	ldi	r31, 0x00	; 0
 200:	f0 93 6d 00 	sts	0x006D, r31	; 0x80006d <InstrAddress+0x1>
 204:	e0 93 6c 00 	sts	0x006C, r30	; 0x80006c <InstrAddress>
 208:	80 81       	ld	r24, Z
 20a:	83 34       	cpi	r24, 0x43	; 67
 20c:	41 f0       	breq	.+16     	; 0x21e <RXC_Interrupt+0x54>
 20e:	8e 34       	cpi	r24, 0x4E	; 78
 210:	19 f0       	breq	.+6      	; 0x218 <RXC_Interrupt+0x4e>
 212:	81 34       	cpi	r24, 0x41	; 65
 214:	79 f4       	brne	.+30     	; 0x234 <RXC_Interrupt+0x6a>
 216:	06 c0       	rjmp	.+12     	; 0x224 <RXC_Interrupt+0x5a>
 218:	0e 94 95 00 	call	0x12a	; 0x12a <NumberInstr>
 21c:	0b c0       	rjmp	.+22     	; 0x234 <RXC_Interrupt+0x6a>
 21e:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <ClearInstr>
 222:	08 c0       	rjmp	.+16     	; 0x234 <RXC_Interrupt+0x6a>
 224:	88 ef       	ldi	r24, 0xF8	; 248
 226:	8a b9       	out	0x0a, r24	; 10
 228:	05 c0       	rjmp	.+10     	; 0x234 <RXC_Interrupt+0x6a>
 22a:	31 96       	adiw	r30, 0x01	; 1
 22c:	f0 93 6d 00 	sts	0x006D, r31	; 0x80006d <InstrAddress+0x1>
 230:	e0 93 6c 00 	sts	0x006C, r30	; 0x80006c <InstrAddress>
 234:	0f 91       	pop	r16
 236:	08 95       	ret

00000238 <UDRE_Interrupt>:
 238:	cf 93       	push	r28
 23a:	df 93       	push	r29
 23c:	e0 91 66 00 	lds	r30, 0x0066	; 0x800066 <ResVar>
 240:	f0 91 67 00 	lds	r31, 0x0067	; 0x800067 <ResVar+0x1>
 244:	80 81       	ld	r24, Z
 246:	81 30       	cpi	r24, 0x01	; 1
 248:	99 f4       	brne	.+38     	; 0x270 <UDRE_Interrupt+0x38>
 24a:	e0 91 68 00 	lds	r30, 0x0068	; 0x800068 <ResAddress>
 24e:	f0 91 69 00 	lds	r31, 0x0069	; 0x800069 <ResAddress+0x1>
 252:	80 81       	ld	r24, Z
 254:	8c b9       	out	0x0c, r24	; 12
 256:	e0 91 68 00 	lds	r30, 0x0068	; 0x800068 <ResAddress>
 25a:	f0 91 69 00 	lds	r31, 0x0069	; 0x800069 <ResAddress+0x1>
 25e:	80 81       	ld	r24, Z
 260:	8c b9       	out	0x0c, r24	; 12
 262:	e0 91 68 00 	lds	r30, 0x0068	; 0x800068 <ResAddress>
 266:	f0 91 69 00 	lds	r31, 0x0069	; 0x800069 <ResAddress+0x1>
 26a:	80 81       	ld	r24, Z
 26c:	84 bd       	out	0x24, r24	; 36
 26e:	12 c0       	rjmp	.+36     	; 0x294 <UDRE_Interrupt+0x5c>
 270:	e0 91 6e 00 	lds	r30, 0x006E	; 0x80006e <UARTAnsAddress>
 274:	f0 91 6f 00 	lds	r31, 0x006F	; 0x80006f <UARTAnsAddress+0x1>
 278:	80 81       	ld	r24, Z
 27a:	8c b9       	out	0x0c, r24	; 12
 27c:	e0 91 6e 00 	lds	r30, 0x006E	; 0x80006e <UARTAnsAddress>
 280:	f0 91 6f 00 	lds	r31, 0x006F	; 0x80006f <UARTAnsAddress+0x1>
 284:	80 81       	ld	r24, Z
 286:	8c b9       	out	0x0c, r24	; 12
 288:	e0 91 6e 00 	lds	r30, 0x006E	; 0x80006e <UARTAnsAddress>
 28c:	f0 91 6f 00 	lds	r31, 0x006F	; 0x80006f <UARTAnsAddress+0x1>
 290:	80 81       	ld	r24, Z
 292:	84 bd       	out	0x24, r24	; 36
 294:	e0 91 6e 00 	lds	r30, 0x006E	; 0x80006e <UARTAnsAddress>
 298:	f0 91 6f 00 	lds	r31, 0x006F	; 0x80006f <UARTAnsAddress+0x1>
 29c:	80 81       	ld	r24, Z
 29e:	8a 30       	cpi	r24, 0x0A	; 10
 2a0:	49 f4       	brne	.+18     	; 0x2b4 <UDRE_Interrupt+0x7c>
 2a2:	80 e9       	ldi	r24, 0x90	; 144
 2a4:	90 e0       	ldi	r25, 0x00	; 0
 2a6:	90 93 6f 00 	sts	0x006F, r25	; 0x80006f <UARTAnsAddress+0x1>
 2aa:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <UARTAnsAddress>
 2ae:	88 ed       	ldi	r24, 0xD8	; 216
 2b0:	8a b9       	out	0x0a, r24	; 10
 2b2:	27 c0       	rjmp	.+78     	; 0x302 <UDRE_Interrupt+0xca>
 2b4:	a0 91 68 00 	lds	r26, 0x0068	; 0x800068 <ResAddress>
 2b8:	b0 91 69 00 	lds	r27, 0x0069	; 0x800069 <ResAddress+0x1>
 2bc:	8c 91       	ld	r24, X
 2be:	8a 30       	cpi	r24, 0x0A	; 10
 2c0:	71 f4       	brne	.+28     	; 0x2de <UDRE_Interrupt+0xa6>
 2c2:	80 ec       	ldi	r24, 0xC0	; 192
 2c4:	90 e0       	ldi	r25, 0x00	; 0
 2c6:	90 93 69 00 	sts	0x0069, r25	; 0x800069 <ResAddress+0x1>
 2ca:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <ResAddress>
 2ce:	e0 91 66 00 	lds	r30, 0x0066	; 0x800066 <ResVar>
 2d2:	f0 91 67 00 	lds	r31, 0x0067	; 0x800067 <ResVar+0x1>
 2d6:	10 82       	st	Z, r1
 2d8:	88 ed       	ldi	r24, 0xD8	; 216
 2da:	8a b9       	out	0x0a, r24	; 10
 2dc:	12 c0       	rjmp	.+36     	; 0x302 <UDRE_Interrupt+0xca>
 2de:	c0 91 66 00 	lds	r28, 0x0066	; 0x800066 <ResVar>
 2e2:	d0 91 67 00 	lds	r29, 0x0067	; 0x800067 <ResVar+0x1>
 2e6:	88 81       	ld	r24, Y
 2e8:	81 30       	cpi	r24, 0x01	; 1
 2ea:	31 f4       	brne	.+12     	; 0x2f8 <UDRE_Interrupt+0xc0>
 2ec:	11 96       	adiw	r26, 0x01	; 1
 2ee:	b0 93 69 00 	sts	0x0069, r27	; 0x800069 <ResAddress+0x1>
 2f2:	a0 93 68 00 	sts	0x0068, r26	; 0x800068 <ResAddress>
 2f6:	05 c0       	rjmp	.+10     	; 0x302 <UDRE_Interrupt+0xca>
 2f8:	31 96       	adiw	r30, 0x01	; 1
 2fa:	f0 93 6f 00 	sts	0x006F, r31	; 0x80006f <UARTAnsAddress+0x1>
 2fe:	e0 93 6e 00 	sts	0x006E, r30	; 0x80006e <UARTAnsAddress>
 302:	df 91       	pop	r29
 304:	cf 91       	pop	r28
 306:	08 95       	ret

00000308 <UTXC_Interrupt>:
 308:	80 ea       	ldi	r24, 0xA0	; 160
 30a:	90 e0       	ldi	r25, 0x00	; 0
 30c:	90 93 6d 00 	sts	0x006D, r25	; 0x80006d <InstrAddress+0x1>
 310:	80 93 6c 00 	sts	0x006C, r24	; 0x80006c <InstrAddress>
 314:	2c e0       	ldi	r18, 0x0C	; 12
 316:	e0 91 6c 00 	lds	r30, 0x006C	; 0x80006c <InstrAddress>
 31a:	f0 91 6d 00 	lds	r31, 0x006D	; 0x80006d <InstrAddress+0x1>
 31e:	10 82       	st	Z, r1
 320:	80 91 6c 00 	lds	r24, 0x006C	; 0x80006c <InstrAddress>
 324:	90 91 6d 00 	lds	r25, 0x006D	; 0x80006d <InstrAddress+0x1>
 328:	01 96       	adiw	r24, 0x01	; 1
 32a:	90 93 6d 00 	sts	0x006D, r25	; 0x80006d <InstrAddress+0x1>
 32e:	80 93 6c 00 	sts	0x006C, r24	; 0x80006c <InstrAddress>
 332:	21 50       	subi	r18, 0x01	; 1
 334:	81 f7       	brne	.-32     	; 0x316 <UTXC_Interrupt+0xe>
 336:	80 ea       	ldi	r24, 0xA0	; 160
 338:	90 e0       	ldi	r25, 0x00	; 0
 33a:	90 93 6d 00 	sts	0x006D, r25	; 0x80006d <InstrAddress+0x1>
 33e:	80 93 6c 00 	sts	0x006C, r24	; 0x80006c <InstrAddress>
 342:	08 95       	ret

00000344 <__vector_6>:
 344:	1f 92       	push	r1
 346:	0f 92       	push	r0
 348:	0f b6       	in	r0, 0x3f	; 63
 34a:	0f 92       	push	r0
 34c:	11 24       	eor	r1, r1
 34e:	2f 93       	push	r18
 350:	3f 93       	push	r19
 352:	4f 93       	push	r20
 354:	5f 93       	push	r21
 356:	6f 93       	push	r22
 358:	7f 93       	push	r23
 35a:	8f 93       	push	r24
 35c:	9f 93       	push	r25
 35e:	af 93       	push	r26
 360:	bf 93       	push	r27
 362:	ef 93       	push	r30
 364:	ff 93       	push	r31
 366:	0e 94 41 00 	call	0x82	; 0x82 <CTC_Timer_Interrupt>
 36a:	ff 91       	pop	r31
 36c:	ef 91       	pop	r30
 36e:	bf 91       	pop	r27
 370:	af 91       	pop	r26
 372:	9f 91       	pop	r25
 374:	8f 91       	pop	r24
 376:	7f 91       	pop	r23
 378:	6f 91       	pop	r22
 37a:	5f 91       	pop	r21
 37c:	4f 91       	pop	r20
 37e:	3f 91       	pop	r19
 380:	2f 91       	pop	r18
 382:	0f 90       	pop	r0
 384:	0f be       	out	0x3f, r0	; 63
 386:	0f 90       	pop	r0
 388:	1f 90       	pop	r1
 38a:	18 95       	reti

0000038c <__vector_11>:
 38c:	1f 92       	push	r1
 38e:	0f 92       	push	r0
 390:	0f b6       	in	r0, 0x3f	; 63
 392:	0f 92       	push	r0
 394:	11 24       	eor	r1, r1
 396:	2f 93       	push	r18
 398:	3f 93       	push	r19
 39a:	4f 93       	push	r20
 39c:	5f 93       	push	r21
 39e:	6f 93       	push	r22
 3a0:	7f 93       	push	r23
 3a2:	8f 93       	push	r24
 3a4:	9f 93       	push	r25
 3a6:	af 93       	push	r26
 3a8:	bf 93       	push	r27
 3aa:	ef 93       	push	r30
 3ac:	ff 93       	push	r31
 3ae:	a8 95       	wdr
 3b0:	0e 94 e5 00 	call	0x1ca	; 0x1ca <RXC_Interrupt>
 3b4:	ff 91       	pop	r31
 3b6:	ef 91       	pop	r30
 3b8:	bf 91       	pop	r27
 3ba:	af 91       	pop	r26
 3bc:	9f 91       	pop	r25
 3be:	8f 91       	pop	r24
 3c0:	7f 91       	pop	r23
 3c2:	6f 91       	pop	r22
 3c4:	5f 91       	pop	r21
 3c6:	4f 91       	pop	r20
 3c8:	3f 91       	pop	r19
 3ca:	2f 91       	pop	r18
 3cc:	0f 90       	pop	r0
 3ce:	0f be       	out	0x3f, r0	; 63
 3d0:	0f 90       	pop	r0
 3d2:	1f 90       	pop	r1
 3d4:	18 95       	reti

000003d6 <__vector_12>:
 3d6:	1f 92       	push	r1
 3d8:	0f 92       	push	r0
 3da:	0f b6       	in	r0, 0x3f	; 63
 3dc:	0f 92       	push	r0
 3de:	11 24       	eor	r1, r1
 3e0:	2f 93       	push	r18
 3e2:	3f 93       	push	r19
 3e4:	4f 93       	push	r20
 3e6:	5f 93       	push	r21
 3e8:	6f 93       	push	r22
 3ea:	7f 93       	push	r23
 3ec:	8f 93       	push	r24
 3ee:	9f 93       	push	r25
 3f0:	af 93       	push	r26
 3f2:	bf 93       	push	r27
 3f4:	ef 93       	push	r30
 3f6:	ff 93       	push	r31
 3f8:	a8 95       	wdr
 3fa:	0e 94 1c 01 	call	0x238	; 0x238 <UDRE_Interrupt>
 3fe:	ff 91       	pop	r31
 400:	ef 91       	pop	r30
 402:	bf 91       	pop	r27
 404:	af 91       	pop	r26
 406:	9f 91       	pop	r25
 408:	8f 91       	pop	r24
 40a:	7f 91       	pop	r23
 40c:	6f 91       	pop	r22
 40e:	5f 91       	pop	r21
 410:	4f 91       	pop	r20
 412:	3f 91       	pop	r19
 414:	2f 91       	pop	r18
 416:	0f 90       	pop	r0
 418:	0f be       	out	0x3f, r0	; 63
 41a:	0f 90       	pop	r0
 41c:	1f 90       	pop	r1
 41e:	18 95       	reti

00000420 <__vector_13>:
 420:	1f 92       	push	r1
 422:	0f 92       	push	r0
 424:	0f b6       	in	r0, 0x3f	; 63
 426:	0f 92       	push	r0
 428:	11 24       	eor	r1, r1
 42a:	2f 93       	push	r18
 42c:	3f 93       	push	r19
 42e:	4f 93       	push	r20
 430:	5f 93       	push	r21
 432:	6f 93       	push	r22
 434:	7f 93       	push	r23
 436:	8f 93       	push	r24
 438:	9f 93       	push	r25
 43a:	af 93       	push	r26
 43c:	bf 93       	push	r27
 43e:	ef 93       	push	r30
 440:	ff 93       	push	r31
 442:	a8 95       	wdr
 444:	0e 94 84 01 	call	0x308	; 0x308 <UTXC_Interrupt>
 448:	ff 91       	pop	r31
 44a:	ef 91       	pop	r30
 44c:	bf 91       	pop	r27
 44e:	af 91       	pop	r26
 450:	9f 91       	pop	r25
 452:	8f 91       	pop	r24
 454:	7f 91       	pop	r23
 456:	6f 91       	pop	r22
 458:	5f 91       	pop	r21
 45a:	4f 91       	pop	r20
 45c:	3f 91       	pop	r19
 45e:	2f 91       	pop	r18
 460:	0f 90       	pop	r0
 462:	0f be       	out	0x3f, r0	; 63
 464:	0f 90       	pop	r0
 466:	1f 90       	pop	r1
 468:	18 95       	reti

0000046a <initUART>:
}
void initUART(){

	UBRRL = LOW(UBRRValue);			// load baud prescale
 46a:	80 e4       	ldi	r24, 0x40	; 64
 46c:	89 b9       	out	0x09, r24	; 9
	UBRRH = HIGH(UBRRValue);		// to UBRR
 46e:	10 bc       	out	0x20, r1	; 32

	UCSRB = (1<<RXEN)|(1<<TXEN)|(1<<RXCIE)|(1<<TXCIE); // enable transmitter, receiver
 470:	88 ed       	ldi	r24, 0xD8	; 216
 472:	8a b9       	out	0x0a, r24	; 10
	UCSRC = (1<<URSEL)|(1<<UCSZ1)|(1<<UCSZ0);			//Set frame format: 8data, 1stop bit
 474:	86 e8       	ldi	r24, 0x86	; 134
 476:	80 bd       	out	0x20, r24	; 32
 478:	08 95       	ret

0000047a <initPorts>:
}
void initPorts(){
	// 	Ports Initialization
	DDRA = 0xFF;	//Port A Initialization as output
 47a:	8f ef       	ldi	r24, 0xFF	; 255
 47c:	8a bb       	out	0x1a, r24	; 26
	DDRC = 0xFF;	//Port C Initialization as output	
 47e:	84 bb       	out	0x14, r24	; 20

	//	Enable Compare Interrupt
	TIMSK = (1<<OCIE1A);
 480:	80 e1       	ldi	r24, 0x10	; 16
 482:	89 bf       	out	0x39, r24	; 57
	OCR1AH = HIGH(LoopValue);
 484:	97 e2       	ldi	r25, 0x27	; 39
 486:	9b bd       	out	0x2b, r25	; 43
	OCR1AL = LOW(LoopValue);
 488:	8a bd       	out	0x2a, r24	; 42
	TCCR1B = (1<<CS10)|(1<<WGM12);
 48a:	89 e0       	ldi	r24, 0x09	; 9
 48c:	8e bd       	out	0x2e, r24	; 46
 48e:	08 95       	ret

00000490 <initRam>:
}
void initRam(){
	// RAM Initialization for display
	uint8_t i;
	for(i=0;i<=7;i++){
 490:	80 e0       	ldi	r24, 0x00	; 0
		
		*display_address = i;
 492:	e0 91 70 00 	lds	r30, 0x0070	; 0x800070 <display_address>
 496:	f0 91 71 00 	lds	r31, 0x0071	; 0x800071 <display_address+0x1>
 49a:	80 83       	st	Z, r24
		display_address += 1;
 49c:	20 91 70 00 	lds	r18, 0x0070	; 0x800070 <display_address>
 4a0:	30 91 71 00 	lds	r19, 0x0071	; 0x800071 <display_address+0x1>
 4a4:	2f 5f       	subi	r18, 0xFF	; 255
 4a6:	3f 4f       	sbci	r19, 0xFF	; 255
 4a8:	30 93 71 00 	sts	0x0071, r19	; 0x800071 <display_address+0x1>
 4ac:	20 93 70 00 	sts	0x0070, r18	; 0x800070 <display_address>
	TCCR1B = (1<<CS10)|(1<<WGM12);
}
void initRam(){
	// RAM Initialization for display
	uint8_t i;
	for(i=0;i<=7;i++){
 4b0:	8f 5f       	subi	r24, 0xFF	; 255
 4b2:	88 30       	cpi	r24, 0x08	; 8
 4b4:	71 f7       	brne	.-36     	; 0x492 <initRam+0x2>
		
		*display_address = i;
		display_address += 1;
		}
	display_address = (uint8_t *)0x0080;
 4b6:	80 e8       	ldi	r24, 0x80	; 128
 4b8:	90 e0       	ldi	r25, 0x00	; 0
 4ba:	90 93 71 00 	sts	0x0071, r25	; 0x800071 <display_address+0x1>
 4be:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <display_address>
	// UART answer Initialization
		*UARTAnsAddress = ASCII_O;
 4c2:	e0 91 6e 00 	lds	r30, 0x006E	; 0x80006e <UARTAnsAddress>
 4c6:	f0 91 6f 00 	lds	r31, 0x006F	; 0x80006f <UARTAnsAddress+0x1>
 4ca:	8f e4       	ldi	r24, 0x4F	; 79
 4cc:	80 83       	st	Z, r24
		UARTAnsAddress += 1;
 4ce:	e0 91 6e 00 	lds	r30, 0x006E	; 0x80006e <UARTAnsAddress>
 4d2:	f0 91 6f 00 	lds	r31, 0x006F	; 0x80006f <UARTAnsAddress+0x1>
 4d6:	cf 01       	movw	r24, r30
 4d8:	01 96       	adiw	r24, 0x01	; 1
 4da:	90 93 6f 00 	sts	0x006F, r25	; 0x80006f <UARTAnsAddress+0x1>
 4de:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <UARTAnsAddress>
		*UARTAnsAddress = ASCII_K;
 4e2:	8b e4       	ldi	r24, 0x4B	; 75
 4e4:	81 83       	std	Z+1, r24	; 0x01
		UARTAnsAddress += 1;
 4e6:	e0 91 6e 00 	lds	r30, 0x006E	; 0x80006e <UARTAnsAddress>
 4ea:	f0 91 6f 00 	lds	r31, 0x006F	; 0x80006f <UARTAnsAddress+0x1>
 4ee:	cf 01       	movw	r24, r30
 4f0:	01 96       	adiw	r24, 0x01	; 1
 4f2:	90 93 6f 00 	sts	0x006F, r25	; 0x80006f <UARTAnsAddress+0x1>
 4f6:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <UARTAnsAddress>
		*UARTAnsAddress = ASCII_CR;
 4fa:	9d e0       	ldi	r25, 0x0D	; 13
 4fc:	91 83       	std	Z+1, r25	; 0x01
		UARTAnsAddress += 1;
 4fe:	e0 91 6e 00 	lds	r30, 0x006E	; 0x80006e <UARTAnsAddress>
 502:	f0 91 6f 00 	lds	r31, 0x006F	; 0x80006f <UARTAnsAddress+0x1>
		*UARTAnsAddress = ASCII_LF;
 506:	8a e0       	ldi	r24, 0x0A	; 10
 508:	81 83       	std	Z+1, r24	; 0x01
		UARTAnsAddress += 1;
		UARTAnsAddress = (uint8_t *)0x0090;
 50a:	20 e9       	ldi	r18, 0x90	; 144
 50c:	30 e0       	ldi	r19, 0x00	; 0
 50e:	30 93 6f 00 	sts	0x006F, r19	; 0x80006f <UARTAnsAddress+0x1>
 512:	20 93 6e 00 	sts	0x006E, r18	; 0x80006e <UARTAnsAddress>
		
		//Instruction Address Initialization
		InstrAddress = (uint8_t *)0x00A0;
 516:	20 ea       	ldi	r18, 0xA0	; 160
 518:	30 e0       	ldi	r19, 0x00	; 0
 51a:	30 93 6d 00 	sts	0x006D, r19	; 0x80006d <InstrAddress+0x1>
 51e:	20 93 6c 00 	sts	0x006C, r18	; 0x80006c <InstrAddress>
		
		//Decode Address Initialization
		//7seg 0
		*DecAddress = 0b11000000;
 522:	e0 91 6a 00 	lds	r30, 0x006A	; 0x80006a <DecAddress>
 526:	f0 91 6b 00 	lds	r31, 0x006B	; 0x80006b <DecAddress+0x1>
 52a:	20 ec       	ldi	r18, 0xC0	; 192
 52c:	20 83       	st	Z, r18
		DecAddress += 1;
 52e:	e0 91 6a 00 	lds	r30, 0x006A	; 0x80006a <DecAddress>
 532:	f0 91 6b 00 	lds	r31, 0x006B	; 0x80006b <DecAddress+0x1>
 536:	9f 01       	movw	r18, r30
 538:	2f 5f       	subi	r18, 0xFF	; 255
 53a:	3f 4f       	sbci	r19, 0xFF	; 255
 53c:	30 93 6b 00 	sts	0x006B, r19	; 0x80006b <DecAddress+0x1>
 540:	20 93 6a 00 	sts	0x006A, r18	; 0x80006a <DecAddress>
		//7seg 1
		*DecAddress = 0b11111001;
 544:	29 ef       	ldi	r18, 0xF9	; 249
 546:	21 83       	std	Z+1, r18	; 0x01
		DecAddress += 1;
 548:	e0 91 6a 00 	lds	r30, 0x006A	; 0x80006a <DecAddress>
 54c:	f0 91 6b 00 	lds	r31, 0x006B	; 0x80006b <DecAddress+0x1>
 550:	9f 01       	movw	r18, r30
 552:	2f 5f       	subi	r18, 0xFF	; 255
 554:	3f 4f       	sbci	r19, 0xFF	; 255
 556:	30 93 6b 00 	sts	0x006B, r19	; 0x80006b <DecAddress+0x1>
 55a:	20 93 6a 00 	sts	0x006A, r18	; 0x80006a <DecAddress>
		//7seg 2
		*DecAddress = 0b10100100;
 55e:	24 ea       	ldi	r18, 0xA4	; 164
 560:	21 83       	std	Z+1, r18	; 0x01
		DecAddress += 1;
 562:	e0 91 6a 00 	lds	r30, 0x006A	; 0x80006a <DecAddress>
 566:	f0 91 6b 00 	lds	r31, 0x006B	; 0x80006b <DecAddress+0x1>
 56a:	9f 01       	movw	r18, r30
 56c:	2f 5f       	subi	r18, 0xFF	; 255
 56e:	3f 4f       	sbci	r19, 0xFF	; 255
 570:	30 93 6b 00 	sts	0x006B, r19	; 0x80006b <DecAddress+0x1>
 574:	20 93 6a 00 	sts	0x006A, r18	; 0x80006a <DecAddress>
		//7seg 3
		*DecAddress = 0b10110000;
 578:	20 eb       	ldi	r18, 0xB0	; 176
 57a:	21 83       	std	Z+1, r18	; 0x01
		DecAddress += 1;
 57c:	e0 91 6a 00 	lds	r30, 0x006A	; 0x80006a <DecAddress>
 580:	f0 91 6b 00 	lds	r31, 0x006B	; 0x80006b <DecAddress+0x1>
 584:	9f 01       	movw	r18, r30
 586:	2f 5f       	subi	r18, 0xFF	; 255
 588:	3f 4f       	sbci	r19, 0xFF	; 255
 58a:	30 93 6b 00 	sts	0x006B, r19	; 0x80006b <DecAddress+0x1>
 58e:	20 93 6a 00 	sts	0x006A, r18	; 0x80006a <DecAddress>
		//7seg 4
		*DecAddress = 0b10011001;
 592:	29 e9       	ldi	r18, 0x99	; 153
 594:	21 83       	std	Z+1, r18	; 0x01
		DecAddress += 1;
 596:	e0 91 6a 00 	lds	r30, 0x006A	; 0x80006a <DecAddress>
 59a:	f0 91 6b 00 	lds	r31, 0x006B	; 0x80006b <DecAddress+0x1>
 59e:	9f 01       	movw	r18, r30
 5a0:	2f 5f       	subi	r18, 0xFF	; 255
 5a2:	3f 4f       	sbci	r19, 0xFF	; 255
 5a4:	30 93 6b 00 	sts	0x006B, r19	; 0x80006b <DecAddress+0x1>
 5a8:	20 93 6a 00 	sts	0x006A, r18	; 0x80006a <DecAddress>
		//7seg 5
		*DecAddress = 0b10010010;
 5ac:	22 e9       	ldi	r18, 0x92	; 146
 5ae:	21 83       	std	Z+1, r18	; 0x01
		DecAddress += 1;
 5b0:	e0 91 6a 00 	lds	r30, 0x006A	; 0x80006a <DecAddress>
 5b4:	f0 91 6b 00 	lds	r31, 0x006B	; 0x80006b <DecAddress+0x1>
 5b8:	9f 01       	movw	r18, r30
 5ba:	2f 5f       	subi	r18, 0xFF	; 255
 5bc:	3f 4f       	sbci	r19, 0xFF	; 255
 5be:	30 93 6b 00 	sts	0x006B, r19	; 0x80006b <DecAddress+0x1>
 5c2:	20 93 6a 00 	sts	0x006A, r18	; 0x80006a <DecAddress>
		//7seg 6
		*DecAddress = 0b10000010;
 5c6:	22 e8       	ldi	r18, 0x82	; 130
 5c8:	21 83       	std	Z+1, r18	; 0x01
		DecAddress += 1;
 5ca:	e0 91 6a 00 	lds	r30, 0x006A	; 0x80006a <DecAddress>
 5ce:	f0 91 6b 00 	lds	r31, 0x006B	; 0x80006b <DecAddress+0x1>
 5d2:	9f 01       	movw	r18, r30
 5d4:	2f 5f       	subi	r18, 0xFF	; 255
 5d6:	3f 4f       	sbci	r19, 0xFF	; 255
 5d8:	30 93 6b 00 	sts	0x006B, r19	; 0x80006b <DecAddress+0x1>
 5dc:	20 93 6a 00 	sts	0x006A, r18	; 0x80006a <DecAddress>
		//7seg 7
		*DecAddress = 0b11111000;
 5e0:	28 ef       	ldi	r18, 0xF8	; 248
 5e2:	21 83       	std	Z+1, r18	; 0x01
		DecAddress += 1;
 5e4:	e0 91 6a 00 	lds	r30, 0x006A	; 0x80006a <DecAddress>
 5e8:	f0 91 6b 00 	lds	r31, 0x006B	; 0x80006b <DecAddress+0x1>
 5ec:	9f 01       	movw	r18, r30
 5ee:	2f 5f       	subi	r18, 0xFF	; 255
 5f0:	3f 4f       	sbci	r19, 0xFF	; 255
 5f2:	30 93 6b 00 	sts	0x006B, r19	; 0x80006b <DecAddress+0x1>
 5f6:	20 93 6a 00 	sts	0x006A, r18	; 0x80006a <DecAddress>
		//7seg 8
		*DecAddress = 0b10000000;
 5fa:	20 e8       	ldi	r18, 0x80	; 128
 5fc:	21 83       	std	Z+1, r18	; 0x01
		DecAddress += 1;
 5fe:	e0 91 6a 00 	lds	r30, 0x006A	; 0x80006a <DecAddress>
 602:	f0 91 6b 00 	lds	r31, 0x006B	; 0x80006b <DecAddress+0x1>
 606:	9f 01       	movw	r18, r30
 608:	2f 5f       	subi	r18, 0xFF	; 255
 60a:	3f 4f       	sbci	r19, 0xFF	; 255
 60c:	30 93 6b 00 	sts	0x006B, r19	; 0x80006b <DecAddress+0x1>
 610:	20 93 6a 00 	sts	0x006A, r18	; 0x80006a <DecAddress>
		//7seg 9
		*DecAddress = 0b10011000;
 614:	28 e9       	ldi	r18, 0x98	; 152
 616:	21 83       	std	Z+1, r18	; 0x01
		DecAddress += 1;
 618:	e0 91 6a 00 	lds	r30, 0x006A	; 0x80006a <DecAddress>
 61c:	f0 91 6b 00 	lds	r31, 0x006B	; 0x80006b <DecAddress+0x1>
		//7seg clear
		*DecAddress = 0b11111111;
 620:	2f ef       	ldi	r18, 0xFF	; 255
 622:	21 83       	std	Z+1, r18	; 0x01
		DecAddress = (uint8_t *)0x00B0;
 624:	20 eb       	ldi	r18, 0xB0	; 176
 626:	30 e0       	ldi	r19, 0x00	; 0
 628:	30 93 6b 00 	sts	0x006B, r19	; 0x80006b <DecAddress+0x1>
 62c:	20 93 6a 00 	sts	0x006A, r18	; 0x80006a <DecAddress>
		
		*ResAddress = ASCII_R;
 630:	e0 91 68 00 	lds	r30, 0x0068	; 0x800068 <ResAddress>
 634:	f0 91 69 00 	lds	r31, 0x0069	; 0x800069 <ResAddress+0x1>
 638:	22 e5       	ldi	r18, 0x52	; 82
 63a:	20 83       	st	Z, r18
		ResAddress += 1;
 63c:	e0 91 68 00 	lds	r30, 0x0068	; 0x800068 <ResAddress>
 640:	f0 91 69 00 	lds	r31, 0x0069	; 0x800069 <ResAddress+0x1>
 644:	9f 01       	movw	r18, r30
 646:	2f 5f       	subi	r18, 0xFF	; 255
 648:	3f 4f       	sbci	r19, 0xFF	; 255
 64a:	30 93 69 00 	sts	0x0069, r19	; 0x800069 <ResAddress+0x1>
 64e:	20 93 68 00 	sts	0x0068, r18	; 0x800068 <ResAddress>
		*ResAddress = ASCII_CR;
 652:	91 83       	std	Z+1, r25	; 0x01
		ResAddress += 1;
 654:	e0 91 68 00 	lds	r30, 0x0068	; 0x800068 <ResAddress>
 658:	f0 91 69 00 	lds	r31, 0x0069	; 0x800069 <ResAddress+0x1>
		*ResAddress = ASCII_LF;
 65c:	81 83       	std	Z+1, r24	; 0x01
		ResAddress =(uint8_t *)0x00C0;
 65e:	80 ec       	ldi	r24, 0xC0	; 192
 660:	90 e0       	ldi	r25, 0x00	; 0
 662:	90 93 69 00 	sts	0x0069, r25	; 0x800069 <ResAddress+0x1>
 666:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <ResAddress>
		
		//Counters Initializations
		RingCounterAddress = (uint8_t *)0x0100;
 66a:	e0 e0       	ldi	r30, 0x00	; 0
 66c:	f1 e0       	ldi	r31, 0x01	; 1
 66e:	f0 93 65 00 	sts	0x0065, r31	; 0x800065 <RingCounterAddress+0x1>
 672:	e0 93 64 00 	sts	0x0064, r30	; 0x800064 <RingCounterAddress>
		*RingCounterAddress = 0b00000001;
 676:	81 e0       	ldi	r24, 0x01	; 1
 678:	80 83       	st	Z, r24
		
		DigitRegAddress = (uint8_t *)0x0101;
 67a:	81 e0       	ldi	r24, 0x01	; 1
 67c:	91 e0       	ldi	r25, 0x01	; 1
 67e:	90 93 63 00 	sts	0x0063, r25	; 0x800063 <DigitRegAddress+0x1>
 682:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <DigitRegAddress>
		DigitCounterAdress = (uint8_t *)0x0102;
 686:	82 e0       	ldi	r24, 0x02	; 2
 688:	91 e0       	ldi	r25, 0x01	; 1
 68a:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 68e:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
 692:	08 95       	ret

00000694 <initialisation>:
}
void initialisation(void){
	
	//Chip Initializations	
		initUART();
 694:	0e 94 35 02 	call	0x46a	; 0x46a <initUART>
		
		initPorts();
 698:	0e 94 3d 02 	call	0x47a	; 0x47a <initPorts>
	UTXC_Interrupt();
}

void initWDT(){
	// Initialize Watchdog Timer
	WDTCR = (1<<WDE)|(1<<WDP2);//|(1<<WDP1);//|(1<<WDP0);
 69c:	8c e0       	ldi	r24, 0x0C	; 12
 69e:	81 bd       	out	0x21, r24	; 33
		initUART();
		
		initPorts();
		initWDT();
	//Enable interrupts
		sei();
 6a0:	78 94       	sei
	if (bit_is_set(MCUCSR,WDRF))
 6a2:	04 b6       	in	r0, 0x34	; 52
 6a4:	03 fe       	sbrs	r0, 3
 6a6:	09 c0       	rjmp	.+18     	; 0x6ba <initialisation+0x26>
	{
		*ResVar = 1;
 6a8:	e0 91 66 00 	lds	r30, 0x0066	; 0x800066 <ResVar>
 6ac:	f0 91 67 00 	lds	r31, 0x0067	; 0x800067 <ResVar+0x1>
 6b0:	81 e0       	ldi	r24, 0x01	; 1
 6b2:	80 83       	st	Z, r24
	PORTA = *(DecAddress + *display_address);
	display_address += 1;
}
void sendAns(){
// 	enable UDRIE Flag
	UCSRB = (1<<UDRIE)|(1<<RXEN)|(1<<TXEN)|(1<<RXCIE)|(1<<TXCIE);
 6b4:	88 ef       	ldi	r24, 0xF8	; 248
 6b6:	8a b9       	out	0x0a, r24	; 10
 6b8:	08 95       	ret
	{
		*ResVar = 1;
		sendAns();
		return;
	}
		initRam();
 6ba:	0e 94 48 02 	call	0x490	; 0x490 <initRam>
 6be:	08 95       	ret

000006c0 <main>:
}

int main(void){
	
  initialisation();
 6c0:	0e 94 4a 03 	call	0x694	; 0x694 <initialisation>
 6c4:	ff cf       	rjmp	.-2      	; 0x6c4 <main+0x4>

000006c6 <_exit>:
 6c6:	f8 94       	cli

000006c8 <__stop_program>:
 6c8:	ff cf       	rjmp	.-2      	; 0x6c8 <__stop_program>
